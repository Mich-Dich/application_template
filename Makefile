# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_x64
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_x64)
  imgui_config = debug_x64
  application_template_config = debug_x64

else ifeq ($(config),relwithdebinfo_x64)
  imgui_config = relwithdebinfo_x64
  application_template_config = relwithdebinfo_x64

else ifeq ($(config),release_x64)
  imgui_config = release_x64
  application_template_config = release_x64

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := imgui application_template

.PHONY: all clean help $(PROJECTS) core dependencies

all: $(PROJECTS)

core: application_template

dependencies: imgui

imgui:
ifneq (,$(imgui_config))
	@echo "==== Building imgui ($(imgui_config)) ===="
	@${MAKE} --no-print-directory -C vendor/imgui -f Makefile config=$(imgui_config)
endif

application_template: imgui
ifneq (,$(application_template_config))
	@echo "==== Building application_template ($(application_template_config)) ===="
	@${MAKE} --no-print-directory -C . -f application_template.make config=$(application_template_config)
endif

clean:
	@${MAKE} --no-print-directory -C vendor/imgui -f Makefile clean
	@${MAKE} --no-print-directory -C . -f application_template.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_x64"
	@echo "  relwithdebinfo_x64"
	@echo "  release_x64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   imgui"
	@echo "   application_template"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"