name: Cross-Platform Setup Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  linux-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, fedora-latest]
        # os: [ubuntu-latest, fedora-40]
        # os: [ubuntu-latest, centos-stream-9]
        # os: [ubuntu-latest, rocky-linux-9]
        # os: [ubuntu-latest, archlinux]
        # os: [ubuntu-latest, fedora-latest, archlinux]
        os: [ubuntu-latest]                         # arch runner make trouble => disable for now
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive  # Important for premake installation
          
      - name: Show Linux version
        run: |
          echo "========= OS VERSION ========="
          cat /etc/os-release || true
          echo "========= KERNEL VERSION ========="
          uname -a

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          
      - name: Install system dependencies
        # Archlinux requires explicit package installation
        if: matrix.os == 'archlinux'
        run: |
          sudo pacman -Syu --noconfirm base-devel cmake git
          
      - name: Run setup.py
        run: python setup.py
        env:
          CI: "true"
          PYTHONPATH: ${{ github.workspace }}

      - name: Build project
        run: gmake -j -k

  windows-test:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive  # Important for premake installation
          
      - name: Show Windows version
        run: |
          echo "========= WINDOWS VERSION ========="
          systeminfo | findstr /B /C:"OS Name" /C:"OS Version"
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          
      - name: Setup Visual Studio
        uses: microsoft/setup-msbuild@v1

      - name: Install GLEW
        run: |
          curl -L -o glew.zip https://sourceforge.net/projects/glew/files/glew/2.1.0/glew-2.1.0-win32.zip/download
          7z x glew.zip -o"vendor/glew"
          move vendor\glew\glew-2.1.0\* vendor\glew\

      - name: Run setup.py
        run: python setup.py
        env:
          CI: "true"
          PYTHONPATH: ${{ github.workspace }}

      - name: Build project
        run: |
          msbuild application.sln /p:Configuration=Debug
