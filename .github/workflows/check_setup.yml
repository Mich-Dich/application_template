name: Cross-Platform Setup Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ubuntu-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Show Linux version
        run: |
          echo "========= OS VERSION ========="
          cat /etc/os-release
          echo "========= KERNEL VERSION ========="
          uname -a

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          
      - name: Run setup.py
        run: python setup.py
        env:
          CI: "true"
          PYTHONPATH: ${{ github.workspace }}

      - name: Build project (Debug)
        run: make -j -k

      - name: Build project (Release with Debug info)
        run: make config=relwithdebinfo_x64 -j -k



  arch-test:
    runs-on: ubuntu-latest
    container: archlinux:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          path: ${{ github.workspace }}
          
      - name: Update system and install dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm base-devel cmake git python
          
      - name: Show Linux version
        run: |
          echo "========= OS VERSION ========="
          cat /etc/os-release
          echo "========= KERNEL VERSION ========="
          uname -a
          echo "========= PYTHON VERSION ========="
          python --version

      - name: Debug Git environment
        run: |
          echo "Current directory: $(pwd)"
          echo "Git status:"
          git status || true
          echo "Git remote:"
          git remote -v || true
          echo "Git config:"
          git config --list || true

      - name: Create virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install PyYAML

      - name: Setup Git environment
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --global user.email "ci@example.com"
          git config --global user.name "CI Runner"
          # Add repository as safe explicitly
          git config --global --add safe.directory /__w/application_template/application_template

      - name: Run setup.py
        run: |
          source venv/bin/activate
          python setup.py
        env:
          CI: "true"
          PYTHONPATH: ${{ github.workspace }}
          GITHUB_WORKSPACE: ${{ github.workspace }}

      - name: Build project (Debug)
        run: make -j -k

      - name: Build project (Release with Debug info)
        run: make config=relwithdebinfo_x64 -j -k


  windows-test:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Show Windows version
        run: |
          echo "========= WINDOWS VERSION ========="
          systeminfo | findstr /B /C:"OS Name" /C:"OS Version"
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          
      - name: Setup Visual Studio
        uses: microsoft/setup-msbuild@v1

      - name: Run setup.py
        run: python setup.py
        env:
          CI: "true"
          PYTHONPATH: ${{ github.workspace }}

      - name: Build project (Debug)
        run: msbuild application.sln /p:Configuration=Debug
